using System;
using SD = System.Drawing;

using Rhino.Geometry;

using Grasshopper.Kernel;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class ProjectComponent_b4a80f93 : ProjectComponent_Base
  {
    static readonly string s_scriptData = "";
    static readonly string s_scriptIconData = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAGKADAAQAAAABAAAAGAAAAADiNXWtAAADCUlEQVRIDe1UO0wUURS9M4CBKDAEQwSjDGolxixaiBY6jYloAYWxsJBZtbEwbmvFUFnuaqnFrrYmuh2IIRkKbTAwaKNiFvwihDjLxyxBnOe5b3c2y7AMxMTOG87c/7nv3beB6B+Lsl3+rqTVI4hMNGTRk84R2XbUYjtU1NBsIXk2aUWYfDDKQ7wphGPVAIamjKSlhXFsOeBc0rKqiFIgSYDQJlJHhPCSuImzhlgNEDagMiwJch1EmoeVyDqFXEWQSYrqwG+owK2g//4Gv9GM1WQlOX8EfRyIWiYsHXEmjq3LIxCU0BU9j1oOCnrQZOMmEb8ZpPUcA0zAwU0N6LISOoA7+IQgN/G49QoeGGRp+PjLCwwd1nTe2/gNHSCE4BXZ/Jj8uB6pEyS8p4jxekhV6Bbn8eua3kidj5QdIImF6EPJ1P3uG3P4JZgKyIAkHlhZKfieoA6QpzYj53jxqn4RyHthJ9zcsjaz5NLhpn1Z+G2KomR512gwuRYnTw2YfT0wXcBGfoTjQSkOADEXx3O/VvWXn9/ScOYNVVfuoJsnuqihZlc/CKxgM3ocxGKADpiAHAY9gnrOkYIiA/oO0DmceU0vPr2jlbVVuHk51nyALrafzMJrQxNrKejT2UBsmrXneeOwJ2AmgBhwBn4bv4EBdAI05c6tI+fY2EyGvi390GByY1GY2CfnYbAjSNrQDmDClivjAdy4OPr1A2XcWZh5aa5tkCuaXfpBt4cecbDXP3WhpFQZBSddEpQHUjEti2D8SNN+qlJVml9eoIXcMl1qP0Ude1rpOx56/uciPZsc5954CUGpacCZKHDJON+EDfm/CI6F05mNNbWtr75MyoKrT+5JzZ9DjS10vOUgmx2o00qJOAjpBh5KK/DhFfliXT56mipwC1/21jVS/Pw1unvh+sLunXX9IOZd842LgoEROBqQLgY3M1DsPBgdElcex8Xg+zG4Uvh2TFBWkItxVdlkMIg6g4sLkoLWgzW+j5wGmIAL2H58S43iBMDX3pagVgd4kLGthv9FwQ38AQ+NS0dFTshuAAAAAElFTkSuQmCC";

    public override Guid ComponentGuid { get; } = new Guid("b4a80f93-22de-4fd9-837e-fb08b1afa8f2");

    public override GH_Exposure Exposure { get; } = GH_Exposure.primary;

    public override bool Obsolete { get; } = false;

    public ProjectComponent_b4a80f93() : base(s_scriptData, s_scriptIconData,
        name: "Image to prompt",
        nickname: "Image to prompt",
        description: "Set up a file path to an image in y and your OpenAI API key on the x",
        category: "AI_Tools",
        subCategory: "Default"
        )
    {
    }

    protected override void RegisterInputParams(GH_InputParamManager _) { }

    protected override void RegisterOutputParams(GH_OutputParamManager _) { }

    protected override void BeforeSolveInstance()
    {
      if (m_script is null) return;
      m_script.BeforeSolve(this);
    }

    protected override void SolveInstance(IGH_DataAccess DA)
    {
      if (m_script is null) return;
      m_script.Solve(this, DA);
    }

    protected override void AfterSolveInstance()
    {
      if (m_script is null) return;
      m_script.AfterSolve(this);
    }

    public override void RemovedFromDocument(GH_Document document)
    {
      ProjectComponentPlugin.DisposeScript(this, m_script);
      base.RemovedFromDocument(document);
    }

    public override BoundingBox ClippingBox
    {
      get
      {
        if (m_script is null) return BoundingBox.Empty;
        return m_script.GetClipBox(this);
      }
    }

    public override void DrawViewportWires(IGH_PreviewArgs args)
    {
      if (m_script is null) return;
      m_script.DrawWires(this, args);
    }

    public override void DrawViewportMeshes(IGH_PreviewArgs args)
    {
      if (m_script is null) return;
      m_script.DrawMeshes(this, args);
    }
  }
}
